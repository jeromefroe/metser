// Code generated by protoc-gen-go.
// source: protobuf-metrics.proto
// DO NOT EDIT!

/*
Package metser is a generated protocol buffer package.

It is generated from these files:
	protobuf-metrics.proto

It has these top-level messages:
	ProtobufCounter
	ProtobufBatchTimer
	ProtobufGauge
	ProtobufMetricUnion
*/
package metser

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ProtobufType int32

const (
	ProtobufType_UnknownType    ProtobufType = 0
	ProtobufType_CounterType    ProtobufType = 1
	ProtobufType_BatchTimerType ProtobufType = 2
	ProtobufType_GaugeType      ProtobufType = 3
)

var ProtobufType_name = map[int32]string{
	0: "UnknownType",
	1: "CounterType",
	2: "BatchTimerType",
	3: "GaugeType",
}
var ProtobufType_value = map[string]int32{
	"UnknownType":    0,
	"CounterType":    1,
	"BatchTimerType": 2,
	"GaugeType":      3,
}

func (x ProtobufType) String() string {
	return proto.EnumName(ProtobufType_name, int32(x))
}
func (ProtobufType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ProtobufCounter struct {
	ID    []byte `protobuf:"bytes,1,opt,name=ID,json=iD,proto3" json:"ID,omitempty"`
	Value int64  `protobuf:"varint,2,opt,name=Value,json=value" json:"Value,omitempty"`
}

func (m *ProtobufCounter) Reset()                    { *m = ProtobufCounter{} }
func (m *ProtobufCounter) String() string            { return proto.CompactTextString(m) }
func (*ProtobufCounter) ProtoMessage()               {}
func (*ProtobufCounter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ProtobufCounter) GetID() []byte {
	if m != nil {
		return m.ID
	}
	return nil
}

func (m *ProtobufCounter) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type ProtobufBatchTimer struct {
	ID     []byte    `protobuf:"bytes,1,opt,name=ID,json=iD,proto3" json:"ID,omitempty"`
	Values []float64 `protobuf:"fixed64,2,rep,packed,name=Values,json=values" json:"Values,omitempty"`
}

func (m *ProtobufBatchTimer) Reset()                    { *m = ProtobufBatchTimer{} }
func (m *ProtobufBatchTimer) String() string            { return proto.CompactTextString(m) }
func (*ProtobufBatchTimer) ProtoMessage()               {}
func (*ProtobufBatchTimer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ProtobufBatchTimer) GetID() []byte {
	if m != nil {
		return m.ID
	}
	return nil
}

func (m *ProtobufBatchTimer) GetValues() []float64 {
	if m != nil {
		return m.Values
	}
	return nil
}

type ProtobufGauge struct {
	ID    []byte  `protobuf:"bytes,1,opt,name=ID,json=iD,proto3" json:"ID,omitempty"`
	Value float64 `protobuf:"fixed64,2,opt,name=Value,json=value" json:"Value,omitempty"`
}

func (m *ProtobufGauge) Reset()                    { *m = ProtobufGauge{} }
func (m *ProtobufGauge) String() string            { return proto.CompactTextString(m) }
func (*ProtobufGauge) ProtoMessage()               {}
func (*ProtobufGauge) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ProtobufGauge) GetID() []byte {
	if m != nil {
		return m.ID
	}
	return nil
}

func (m *ProtobufGauge) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type ProtobufMetricUnion struct {
	Type          ProtobufType `protobuf:"varint,1,opt,name=Type,json=type,enum=metser.ProtobufType" json:"Type,omitempty"`
	ID            []byte       `protobuf:"bytes,2,opt,name=ID,json=iD,proto3" json:"ID,omitempty"`
	CounterVal    int64        `protobuf:"varint,3,opt,name=CounterVal,json=counterVal" json:"CounterVal,omitempty"`
	BatchTimerVal []float64    `protobuf:"fixed64,4,rep,packed,name=BatchTimerVal,json=batchTimerVal" json:"BatchTimerVal,omitempty"`
	GaugeVal      float64      `protobuf:"fixed64,5,opt,name=GaugeVal,json=gaugeVal" json:"GaugeVal,omitempty"`
}

func (m *ProtobufMetricUnion) Reset()                    { *m = ProtobufMetricUnion{} }
func (m *ProtobufMetricUnion) String() string            { return proto.CompactTextString(m) }
func (*ProtobufMetricUnion) ProtoMessage()               {}
func (*ProtobufMetricUnion) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ProtobufMetricUnion) GetType() ProtobufType {
	if m != nil {
		return m.Type
	}
	return ProtobufType_UnknownType
}

func (m *ProtobufMetricUnion) GetID() []byte {
	if m != nil {
		return m.ID
	}
	return nil
}

func (m *ProtobufMetricUnion) GetCounterVal() int64 {
	if m != nil {
		return m.CounterVal
	}
	return 0
}

func (m *ProtobufMetricUnion) GetBatchTimerVal() []float64 {
	if m != nil {
		return m.BatchTimerVal
	}
	return nil
}

func (m *ProtobufMetricUnion) GetGaugeVal() float64 {
	if m != nil {
		return m.GaugeVal
	}
	return 0
}

func init() {
	proto.RegisterType((*ProtobufCounter)(nil), "metser.ProtobufCounter")
	proto.RegisterType((*ProtobufBatchTimer)(nil), "metser.ProtobufBatchTimer")
	proto.RegisterType((*ProtobufGauge)(nil), "metser.ProtobufGauge")
	proto.RegisterType((*ProtobufMetricUnion)(nil), "metser.ProtobufMetricUnion")
	proto.RegisterEnum("metser.ProtobufType", ProtobufType_name, ProtobufType_value)
}

func init() { proto.RegisterFile("protobuf-metrics.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 288 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x91, 0x41, 0x4b, 0xc3, 0x40,
	0x14, 0x84, 0xdd, 0x4d, 0x13, 0xea, 0xb3, 0x49, 0xe5, 0x59, 0x4a, 0xf0, 0x20, 0x21, 0x78, 0x08,
	0x82, 0x39, 0x28, 0xe2, 0xc5, 0x93, 0x16, 0xc4, 0x83, 0x20, 0xb1, 0xed, 0x3d, 0x09, 0x6b, 0x0d,
	0x36, 0x9b, 0x90, 0x6c, 0x94, 0xfe, 0x2c, 0xff, 0xa1, 0xec, 0x33, 0xdb, 0xf6, 0x20, 0x1e, 0x67,
	0x76, 0x86, 0x79, 0x1f, 0x0b, 0xd3, 0xba, 0xa9, 0x54, 0x95, 0x75, 0x6f, 0x97, 0xa5, 0x50, 0x4d,
	0x91, 0xb7, 0x31, 0x19, 0xe8, 0x94, 0x42, 0xb5, 0xa2, 0x09, 0x6f, 0x61, 0xfc, 0xd2, 0x27, 0x1e,
	0xaa, 0x4e, 0x2a, 0xd1, 0xa0, 0x07, 0xfc, 0x69, 0xe6, 0xb3, 0x80, 0x45, 0xa3, 0x84, 0x17, 0x33,
	0x9c, 0x80, 0xbd, 0x4c, 0xd7, 0x9d, 0xf0, 0x79, 0xc0, 0x22, 0x2b, 0xb1, 0x3f, 0xb5, 0x08, 0xef,
	0x00, 0x4d, 0xf1, 0x3e, 0x55, 0xf9, 0xfb, 0xbc, 0x28, 0xff, 0xe8, 0x4e, 0xc1, 0xa1, 0x6e, 0xeb,
	0xf3, 0xc0, 0x8a, 0x58, 0xe2, 0x50, 0xb9, 0x0d, 0x6f, 0xc0, 0x35, 0xed, 0xc7, 0xb4, 0x5b, 0x89,
	0xff, 0x47, 0x99, 0x19, 0xfd, 0x66, 0x70, 0x62, 0x7a, 0xcf, 0xc4, 0xb3, 0x90, 0x45, 0x25, 0x31,
	0x82, 0xc1, 0x7c, 0x53, 0x0b, 0xea, 0x7b, 0x57, 0x93, 0xf8, 0x17, 0x2e, 0x36, 0x51, 0xfd, 0x96,
	0x0c, 0xd4, 0xa6, 0x36, 0x3b, 0x7c, 0xbb, 0x73, 0x06, 0xd0, 0x73, 0x2f, 0xd3, 0xb5, 0x6f, 0x11,
	0x21, 0xe4, 0x5b, 0x07, 0xcf, 0xc1, 0xdd, 0xe1, 0xe9, 0xc8, 0x80, 0x38, 0xdc, 0x6c, 0xdf, 0xc4,
	0x53, 0x18, 0x12, 0x86, 0x0e, 0xd8, 0x74, 0xf0, 0x70, 0xd5, 0xeb, 0x8b, 0x57, 0x18, 0xed, 0xdf,
	0x81, 0x63, 0x38, 0x5a, 0xc8, 0x0f, 0x59, 0x7d, 0x49, 0x2d, 0x8f, 0x0f, 0xb4, 0xd1, 0x9f, 0x40,
	0x06, 0x43, 0x04, 0x6f, 0xb7, 0x49, 0x1e, 0x47, 0x17, 0x0e, 0x69, 0x81, 0xa4, 0x95, 0x39, 0xf4,
	0x8b, 0xd7, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x59, 0x6a, 0x02, 0x3e, 0xdf, 0x01, 0x00, 0x00,
}
